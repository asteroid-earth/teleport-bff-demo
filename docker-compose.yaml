services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_ANALYTICS_API_URL=http://localhost:8081
    ports:
      - "3000:3000"
    depends_on:
      - main_api
      - analytics_api

  main_api:
    build:
      context: .
      dockerfile: docker/api.Dockerfile
    environment:
      - DB_USER=user
      - DB_PASSWORD=password
    depends_on:
      - db
    ports:
      - "8080:5000"

  analytics_api:
    build:
      context: .
      dockerfile: docker/analytics.Dockerfile
    ports:
      - "8081:5001"

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d demo"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  teleport:
    image: public.ecr.aws/gravitational/teleport-distroless:16.4
    volumes:
      - ./config/teleport.yaml:/etc/teleport/teleport.yaml

networks:
  default:
    name: app_network